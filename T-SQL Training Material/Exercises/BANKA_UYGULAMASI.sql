
CREATE DATABASE BANKS
GO
USE BANKS
GO
CREATE TABLE BANK_X
(
	ACCOUNT_NO INT,
	BALANCE MONEY
)
GO
CREATE TABLE BANK_Y
(
	ACCOUNT_NO INT,
	BALANCE MONEY
)
GO

INSERT BANK_X VALUES (10,1000), (20,2500) , (30,1900), (40,740)
INSERT BANK_Y VALUES (50,100), (60,5200) , (70,900), (80,1740)

GO

ALTER PROC sp_DoTransfer
(
	@SOURCE_BANK NVARCHAR(MAX),
	@DEBIT_ACCOUNT INT,  -- Alacak Hesap - Alacak
	@CREDIT_ACCOUNT INT, -- Borçlu Hesap - Gönderen
	@AMOUNT MONEY
) AS

BEGIN TRAN

DECLARE @DEBIT_ACCOUNT_BALANCE INT
DECLARE @CREDIT_ACCOUNT_BALANCE INT


IF @SOURCE_BANK = 'BANK_X'
BEGIN
	
	SELECT TOP 1 @CREDIT_ACCOUNT_BALANCE = BALANCE FROM BANK_X(NOLOCK) WHERE ACCOUNT_NO = @CREDIT_ACCOUNT
	IF @AMOUNT > @CREDIT_ACCOUNT_BALANCE
	BEGIN
		PRINT CAST(@CREDIT_ACCOUNT AS NVARCHAR(MAX)) + ' numaralı hesapta, gönderilmek istenen tutardan az para vardır.'
		ROLLBACK TRAN
	END
	ELSE
	BEGIN
		UPDATE BANK_X SET BALANCE = BALANCE - @AMOUNT WHERE ACCOUNT_NO = @CREDIT_ACCOUNT
		UPDATE BANK_Y SET BALANCE = BALANCE + @AMOUNT WHERE ACCOUNT_NO = @DEBIT_ACCOUNT

		COMMIT 
	END

END 
ELSE IF @SOURCE_BANK = 'BANK_Y'
BEGIN 
	
	SELECT TOP 1 @CREDIT_ACCOUNT_BALANCE = BALANCE FROM BANK_Y(NOLOCK) WHERE ACCOUNT_NO = @CREDIT_ACCOUNT
	IF @AMOUNT > @CREDIT_ACCOUNT_BALANCE
	BEGIN
		PRINT CAST(@CREDIT_ACCOUNT AS NVARCHAR(MAX)) + ' numaralı hesapta, gönderilmek istenen tutardan az para vardır.'
		ROLLBACK TRAN
	END
	ELSE
	BEGIN
		UPDATE BANK_Y SET BALANCE = BALANCE - @AMOUNT WHERE ACCOUNT_NO = @CREDIT_ACCOUNT
		UPDATE BANK_X SET BALANCE = BALANCE + @AMOUNT WHERE ACCOUNT_NO = @DEBIT_ACCOUNT

		COMMIT
	END

END


SELECT * FROM BANK_X(NOLOCK)
UNION
SELECT * FROM BANK_Y(NOLOCK)


EXEC sp_DoTransfer 'BANK_X',50,10,100

-- ANSI_NULL ON OFF
-- WHERE Şartın kontrol edilen eşitlik veya eşit değillik konularında
-- NULL değerlerin dikkate alınıp alınmamasını kontrol edilmesi için kullanılır

--SET ANSI_NULLS ON | OFF
-- SET ANSI_NULLS OFF --> null değerler dikkate alınmayacaktır

GO
USE Northwind
GO

SET ANSI_NULLS OFF

SELECT * FROM Categories
WHERE Picture = NULL

